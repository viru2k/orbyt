/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { InvoiceResponseDto } from '../../models/invoice-response-dto';

export interface InvoiceControllerFindAll$Params {

/**
 * Número de página
 */
  page?: string;

/**
 * Elementos por página
 */
  limit?: string;

/**
 * Filtrar por estado
 */
  status?: string;

/**
 * Filtrar por cliente
 */
  clientId?: string;
}

export function invoiceControllerFindAll(http: HttpClient, rootUrl: string, params?: InvoiceControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<InvoiceResponseDto>>> {
  const rb = new RequestBuilder(rootUrl, invoiceControllerFindAll.PATH, 'get');
  if (params) {
    rb.query('page', params.page, {});
    rb.query('limit', params.limit, {});
    rb.query('status', params.status, {});
    rb.query('clientId', params.clientId, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Array<InvoiceResponseDto>>;
    })
  );
}

invoiceControllerFindAll.PATH = '/invoices';
