/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { AppointmentResponseDto } from '../../models/appointment-response-dto';

export interface AgendaControllerGetAppointments$Params {

/**
 * Fecha espec√≠fica (YYYY-MM-DD)
 */
  date?: string;

/**
 * Fecha de inicio del rango ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ)
 */
  from?: string;

/**
 * Fecha de fin del rango ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ)
 */
  to?: string;

/**
 * IDs de profesionales para filtrar (array): ?professionalId=1&professionalId=2 o ?professionalId=1,2
 */
  professionalId?: Array<number>;

/**
 * Estados del turno (array): ?status=pending&status=confirmed o ?status=pending,confirmed
 */
  status?: Array<'pending' | 'confirmed' | 'checked_in' | 'in_progress' | 'completed' | 'cancelled' | 'no_show' | 'rescheduled'>;
}

export function agendaControllerGetAppointments(http: HttpClient, rootUrl: string, params?: AgendaControllerGetAppointments$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<AppointmentResponseDto>>> {
  const rb = new RequestBuilder(rootUrl, agendaControllerGetAppointments.PATH, 'get');
  if (params) {
    rb.query('date', params.date, {});
    rb.query('from', params.from, {});
    rb.query('to', params.to, {});
    rb.query('professionalId', params.professionalId, {});
    rb.query('status', params.status, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Array<AppointmentResponseDto>>;
    })
  );
}

agendaControllerGetAppointments.PATH = '/agenda';
